# exclude files from profiling
BEGIN_FILE_EXCLUDE_LIST

# exclude due to bugs during compiling or runtime
*sc/src/sc_avl.?
*p4est/src/p4est_bits.?
*ymir/src/ymir_petsc.?

END_FILE_EXCLUDE_LIST


# include files for profiling (overrides exclude file list)
BEGIN_FILE_INCLUDE_LIST

*p4est/src/p4est.c
*mangll/src/mangll_cnodes.c
*mangll/src/mangll_tensor.?
*ymir/src/ymir_derivative_elem.?
*ymir/src/ymir_mesh.c
*ymir/src/ymir_pressure_vec.c
*ymir/src/ymir_stiffness*
*ymir/src/ymir_stress*
*ymir/src/ymir_stokes*
*ymir/example/slabs/*

END_FILE_INCLUDE_LIST


# exclude functions from profiling
BEGIN_EXCLUDE_LIST

void SC_GLOBAL_#F(const char *, ...) C
void SC_#F(const char *, ...) C
void P4EST_GLOBAL_#F(const char *, ...) C
void P4EST_#F(const char *, ...) C
void MANGLL_GLOBAL_#F(const char *, ...) C
void MANGLL_#F(const char *, ...) C
void YMIR_GLOBAL_#F(const char *, ...) C
void YMIR_#F(const char *, ...) C

END_EXCLUDE_LIST


# include functions for profiling
BEGIN_INCLUDE_LIST

void ymir_matrix_assemble_# (ymir_matrix_t *) C

END_INCLUDE_LIST


# set selective instrumentation
# Note: This is only available when using source-level instrumentation (PDT);
#       phases require -phase in makefile.
BEGIN_INSTRUMENT_SECTION

# static phases: main parts of the program
static phase routine="void slabs_setup_mesh(p8est_t **, ymir_mesh_t **, ymir_pressure_elem_t **, slabs_stokes_state_t **, MPI_Comm, slabs_physics_options_t *, slabs_discr_options_t *, slabs_nl_solver_options_t *, const char *, const char *, slabs_runtime_t *) C"
static phase routine="void slabs_setup_stokes(slabs_lin_stokes_problem_t **, slabs_nl_stokes_problem_t **, p8est_t *, ymir_mesh_t *, ymir_pressure_elem_t *, slabs_stokes_state_t *, slabs_physics_options_t *, slabs_discr_options_t *, slabs_nl_solver_options_t *, const char *, slabs_runtime_t *) C"
static phase routine="void slabs_solve_stokes(slabs_lin_stokes_problem_t *, slabs_nl_stokes_problem_t **, p8est_t *, ymir_mesh_t **, ymir_pressure_elem_t **, slabs_stokes_state_t *, slabs_physics_options_t *, slabs_discr_options_t *, slabs_nl_solver_options_t *, const char *, const char *, slabs_runtime_t *) C"
static phase routine="void slabs_clear(slabs_lin_stokes_problem_t *, slabs_nl_stokes_problem_t *, p8est_t *, ymir_mesh_t *, ymir_pressure_elem_t *, slabs_stokes_state_t *, slabs_discr_options_t *) C"

# static phases: AMR
static phase routine="void slabs_discr_initial_amr_no_interp(p8est_t *, slabs_physics_options_t *, slabs_discr_options_t *) C"
static phase routine="int slabs_discr_amr(slabs_stokes_state_t *, ymir_mesh_t **, ymir_pressure_elem_t **, p8est_t *, slabs_discr_amr_indicator_params_t *, slabs_physics_options_t *, slabs_discr_options_t *, const int) C"

# static phases: create viscous stress preconditioner and assemble matrix
static phase routine="ymir_stress_pc_t * ymir_stress_pc_new_ext_int(ymir_stress_op_t *, int, ymir_vec_t *) C"
static phase routine="void ymir_stress_op_matrix_int(ymir_stress_op_t *, ymir_matrix_t *, int) C"
static phase routine="void ymir_stress_op_submesh_matrix_int(ymir_stress_op_t *, ymir_submesh_t *, ymir_matrix_t *, int, int) C"

# static phases: assemble pressure BB^T matrix
static phase routine="void ymir_pressure_laplacian_matrix(ymir_vel_dir_t *,ymir_cvec_t *, ymir_pressure_elem_t *, ymir_matrix_t **, int) C"

# static phases: create Stokes preconditioner
static phase routine="ymir_stokes_pc_t * ymir_stokes_pc_new_ext_int(ymir_stokes_op_t *, ymir_stokes_pc_schur_t, ymir_stokes_pc_block_t, int, int) C"

END_INSTRUMENT_SECTION
